{"name":"Bitcoin Python","tagline":"Coinkite Bitcoin API for Python (complete library and standalone)","body":"# Coinkite API Tools for Python \r\n\r\n[Learn more about Coinkite's API here](https://docs.coinkite.com/)\r\nand visit the [Coinkite Main Site](https://coinkite.com/) to open your\r\naccount today!\r\n\r\nEasy install via pip from the Cheese Shop: [coinkite-api package](https://pypi.python.org/pypi/coinkite-api)\r\n\r\n## Requirements\r\n\r\n- [datautils](http://labix.org/python-dateutil) is required to parse ISO 8601 format dates.\r\n\r\n- [SimpleJSON](http://simplejson.readthedocs.org/en/latest/) is\r\n  *very strongly* recommended. It's best because we have to control how decimals are\r\n  encoded and decoded into JSON. We do have some workaround code in place to use the\r\n  stock `json` module, but it's a ugly hack that can only work some of the time.\r\n\r\n- [Requests module](http://docs.python-requests.org/en/latest/) is strongly\r\n  recommended, but not required.\r\n\r\n- [py.test](http://pytest.org/) is needed, but only if you want to\r\n  run the test code in `test_code.py`\r\n\r\n- [PubNub python library](https://github.com/pubnub/python) is needed,\r\n  if you want to monitor real-time events.\r\n\r\n- This code should work directly on Google App Engine without changes.\r\n\r\nSee version numbers in the `requirements.txt` file, which should\r\nbe ready to use with `pip install -r requirements.txt`. It includes\r\nthe full compliment of dependances.\r\n\r\n## Standalone vs. `ckapi` Library\r\n\r\n`standalone/ck-helper.py` is a simple cURL helper program that calculates the\r\nauthentication headers you will need. It provides a great way to quickly test\r\nrequests. Feel free to pull the authentication code from there or the library.\r\n\r\n`ckapi` is a module you can incorporate into your server-side code.\r\nIt handles authentication and HTTPS traffic (including the all-important\r\ncertificate verification), plus provides wrappers for some of the\r\nmost useful API resources. It does magic in the JSON decoding to\r\nprovide more realistic objects to your programs, and correctly\r\ndecodes `decimal.Decimal` numbers.\r\n\r\nAlso included in the library:\r\n\r\n- Testing code which can be a source of examples (see `test_code.py`).\r\n\r\n- `paper.py` which simplifies the rendering of receipts for terminals.\r\n\r\n- `multisig.py` providing code for signing (authorizing) multisig transactions.\r\n\r\n## Getting Started\r\n\r\n````python\r\n>>> from ckapi import CKRequestor\r\n>>> r = CKRequestor('Kxxxx-xxxx-xxx', 'Sxxxx-xxxx-xxx')\r\n>>> r.get('/v1/my/self')\r\n<CKObject: supported_cct=<CKObject: USD='US Dollar' AUD='Australian Dollar' CHF='Swiss Franc' KRW='Won' CNY='Yuan Renminbi' LTC='Litecoin' BLK='Blackcoin' NZD='New Zealand Dollar' XTN='Bitcoin Testnet' EUR='Euro' RUB='Russian Ruble' JPY='Yen' BRL='Brazilian Real' BTC='Bitcoin' PLN='Zloty' CAD='Canadian Dollar' SEK='Swedish Krona' GBP='Pound Sterling'>\r\n member_since='2014-06-12' membership='Personal Plan (pre-paid annually)'\r\n api_key=<CKApiKey: funds_limit=<CKObject: currency='XTN' string='100' pretty=u'\\u2740 100.0 XTN' integer_scale=8 integer=10000000000 decimal=100> CK_refnum='09B724B100-9A3B47' max_request_rate=0 memo='All access' source_ip=None CK_type='CKApiKey' api_key='Kxxx-xxx-xxx' permissions=['term', 'read', 'send2', 'send', 'xfer', 'recv', 'events']>\r\n username='xxx'>\r\n>>> r.put('/v1/new/voucher', account=0, amount=3)\r\n````\r\n\r\n\r\n## More about Coinkite\r\n\r\n_Join The Most Powerful Bitcoin Platform_\r\n\r\nCoinkite is the leading [bitcoin wallet](https://coinkite.com/faq/features) with\r\n[multi-signature](https://coinkite.com/faq/multisig),\r\n[bank-grade security](https://coinkite.com/faq/security),\r\n[developer's API](https://coinkite.com/faq/developers) and [hardcore privacy](https://coinkite.com/privacy).\r\n\r\n[Get Your Account Today!](https://coinkite.com/)\r\n\r\n\r\n","google":"UA-40834364-3","note":"Don't delete this file! It's used internally to help with page regeneration."}